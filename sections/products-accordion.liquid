{{ 'component-products-accordion.css' | asset_url | stylesheet_tag }}


{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title == blank %} no-heading{% endif %}">
  <div class="page-width section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
    <div class="products-accordion grid grid--1-col grid--2-col-tablet">
      <div class="products-accordion__list grid__item">
        {% for block in section.blocks %}
          <div
            class="products-accordion__item {% if forloop.index == 1 %}active{% endif %}"
            {% if forloop.index == 1 %}
            aria-expanded="true"
            {% else %}
            aria-expanded="false"
            {% endif %}
            data-index="{{ forloop.index }}">
            <button class="products-accordion__header" type="button">
              <span class="products-accordion__title h3">
                {{- block.settings.product.title | default: 'Product title' -}}
              </span>
              <span class="products-accordion__icon">{%- render 'icon-chevron' -%}</span>
            </button>
            <div class="products-accordion__body">
              {%- assign description = block.settings.product.description | split: 'Ingredients' | first | strip_html
              -%}
              <div class="products-accordion__body-title h6">{{ description }}</div>
              <div class="products-accordion__body-content">
                {% if block.settings.image != blank %}
                  <div class="products-accordion__image large-up-hide">
                    {{ block.settings.image | image_url: width: 1400 | image_tag: loading: 'lazy' }}
                  </div>
                {% endif %}
                {% if block.settings.show_review %}
                  <div class="products-accordion__review">
                    <div>★★★★★</div>
                    <strong>{{ block.settings.product.title | upcase }}</strong>
                    <div>✓ VERIFIED REVIEW</div>
                    <div class="reviewer-name">{{ block.settings.reviewer_name }}</div>
                    <div class="review-title">{{ block.settings.review_title }}</div>
                    <div class="review-text">{{ block.settings.review_text }}</div>
                  </div>
                {% endif %}
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
      <div class="products-accordion__list grid__item small-hide medium-hide">
        {% for block in section.blocks %}
          {% if block.settings.image != blank %}
            <div class="products-accordion__image {% if forloop.index == 1 %}active{% endif %}" data-index="{{ forloop.index }}">
              {{
                block.settings.image | image_url: width: 1400 | image_tag: loading: 'lazy', style: 'width: 100%; height: auto; object-fit: cover;'
              }}
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<script>
  function toggleProductAccordions() {
    const items = document.querySelectorAll('.products-accordion__item');
    const images = document.querySelectorAll('.products-accordion__list > .products-accordion__image');

    items.forEach((item) => {
      const header = item.querySelector('.products-accordion__header');

      header.addEventListener('click', function () {
        const isActive = item.classList.contains('active');
        if (isActive) return;

        items.forEach((el) => el.classList.remove('active'));
        images.forEach((img) => img.classList.remove('active'));

        item.classList.add('active');

        const index = item.dataset.index;
        const matchingImage = document.querySelector(
          `.products-accordion__list > .products-accordion__image[data-index="${index}"]`
        );
        if (matchingImage) {
          matchingImage.classList.add('active');
        }

        items.forEach((el) => el.setAttribute('aria-expanded', 'false'));
        item.setAttribute('aria-expanded', 'true');
      });
    });
  }

  document.addEventListener('DOMContentLoaded', toggleProductAccordions);
</script>

{% schema %}
  {
    "name": "Products accordion",
    "settings": [
      {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "background-1"
      }, {
        "type": "select",
        "id": "background_style",
        "options": [
          {
            "value": "none",
            "label": "t:sections.multicolumn.settings.background_style.options__1.label"
          }, {
            "value": "primary",
            "label": "t:sections.multicolumn.settings.background_style.options__2.label"
          }
        ],
        "default": "primary",
        "label": "t:sections.multicolumn.settings.background_style.label"
      }, {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 36
      }, {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 36
      }
    ],
    "blocks": [
      {
        "type": "product",
        "name": "Product",
        "settings": [
          {
            "type": "product",
            "id": "product",
            "label": "Product"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "header",
            "content": "Review"
          },
          {
            "type": "checkbox",
            "id": "show_review",
            "label": "Show review",
            "default": true
          }, {
            "type": "richtext",
            "id": "reviewer_name",
            "label": "Reviewer name",
            "default": "<p>John Doe</p>"
          }, {
            "type": "inline_richtext",
            "id": "review_title",
            "label": "Review title",
            "default": "Great product!"
          }, {
            "type": "richtext",
            "id": "review_text",
            "label": "Review text",
            "default": "<p>This is a great product!</p>"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Products accordion",
        "category": "Custom"
      }
    ]
  }
{% endschema %}